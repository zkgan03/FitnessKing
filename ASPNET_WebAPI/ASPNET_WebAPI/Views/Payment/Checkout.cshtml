@{
    ViewData["Title"] = "Process Payment";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model ASPNET_WebAPI.Models.ViewModels.CheckoutViewModel

<style>
    body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f0f0f0;
    }

    .container {
        display: flex;
        gap: 20px;
        margin: 5rem;
    }

    .item-details {
        background-color: #fff;
        padding: 3rem;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-payment {
        background-color: #fff;
        padding: 2rem;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    h2, h3 {
        margin: 0;
        margin-bottom: 0.25rem;
    }

    #paymentForm {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-top: 1rem;
    }

    .form-section {
        display: flex;
        flex-direction: column;
    }

    input {
        margin-bottom: 10px;
        border: 0px;
        background-color: #F1F1F1;
        border-radius: 3px;
        padding-left: 1rem;
        padding-right: 1rem;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        /*box-shadow: inset 0 0 0 3px blue;*/
        outline-color: #007bff;
        outline-width: 2px;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px;
        border-radius: 3px;
        cursor: pointer;
    }

        button:hover {
            background-color: #0056b3;
        }

    .powered-by {
        text-align: center;
        margin-top: 20px;
        font-size: 12px;
        color: #777;
    }
</style>


<div class="container">
    <div class="item-details">
        <div>
            <div>@Model.CheckoutItem.ItemName</div>
            <div style="font-size:2rem; font-weight:800;">RM @Model.CheckoutItem.Amount?.ToString("n2")</div>
        </div>

        <div class="powered-by">
            Powered by <span style="color:#007bff; font-weight:800;">FitPay</span>
        </div>
    </div>

    <div class="card-payment">
        <h2>Card Payment</h2>
        <form id="paymentForm" method="POST" asp-controller="Payment" asp-action="AuthorizePayment">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="CheckoutItem.TransactionId" value="@Model.CheckoutItem.TransactionId">

            <div class="form-section">
                <h3>Email</h3>
                <input type="email" placeholder="Email" asp-for="CardPaymentInfo.Email" required>
            </div>
            <div class="form-section">
                <h3>Card Information</h3>
                <input type="text"
                       placeholder="Cardholder Name"
                       asp-for="CardPaymentInfo.CardInfo.CardHolderName" required>
                <input type="text"
                       id="cardNoInput"
                       placeholder="Card Number"
                       maxlength="19"
                       asp-for="CardPaymentInfo.CardInfo.CardNumber" required>
                <div style="display: flex; gap: 10px;">
                    <input id="expiryDate" type="text" maxlength="5" placeholder="Expiry Date (MM/YY)" asp-for="CardPaymentInfo.CardInfo.ExpiryDate" required style="width: 50%;">
                    <input id="cvv" type="text" placeholder="CVV" maxlength="3" required asp-for="CardPaymentInfo.CardInfo.CVV" style="width: 50%;">
                </div>
            </div>

            <div class="form-section">
                <h3>Billing Address</h3>
                <input type="text" placeholder="Address line 1" asp-for="CardPaymentInfo.BillingAddress.Line1" required>
                <input type="text" placeholder="Address line 2 (optional)" asp-for="CardPaymentInfo.BillingAddress.Line2">
                <input type="text" placeholder="Town / City" asp-for="CardPaymentInfo.BillingAddress.City" required>
                <div style="display: flex; gap: 10px;">
                    <input type="text"
                           placeholder="Country" asp-for="CardPaymentInfo.BillingAddress.Country"
                           required style="width: 50%;">
                    <input id="postcode"
                           type="text"
                           placeholder="Postcode"
                           maxlength="5" asp-for="CardPaymentInfo.BillingAddress.Postcode" required style="width: 50%;">
                </div>
            </div>

            <button type="submit">Pay</button>
        </form>
    </div>
</div>

<script>
    //allow postcode only input 4 number and only number
    function onlyIntInput(e, keyNum) {
        const input = e.target.value;
        if (input.length > keyNum) {
            e.target.value = input.slice(0, keyNum);
        }
        else {
            e.target.value = input.replace(/[^0-9]/g, '');
        }
    }

    document.getElementById('postcode').addEventListener('input', (e) => {
        onlyIntInput(e, 5)
    });
    document.getElementById('cvv').addEventListener('input', (e) => {
        onlyIntInput(e, 3)
    });

    document.getElementById('cardNoInput').addEventListener('input', (e) => {
        onlyIntInput(e, 19);
        const input = e.target.value;

        if (!input) {
            return
        }

        const cardNo = input.replace(/\s/g, ''); // remove all spaces
        const cardNoWithSpace = cardNo.match(/.{1,4}/g).join(' ');

        e.target.value = cardNoWithSpace;
    });

    const expiryDateInput = document.getElementById('expiryDate');
    expiryDateInput.addEventListener('input', function (e) {
        if (e.target.value.length > 5) {
            e.target.value = e.target.value.slice(0, 5);
        }
        else {
            e.target.value = e.target.value.replace(/[^0-9/]/g, ''); // only allow number and /
        } 
        
        const input = e.target.value;
        if (!input) {
            return;
        }

        const cleanDate = input.match(/\d+/g).join(''); // remove all non-digit characters
        const expiryDateWithDash = cleanDate.match(/.{1,2}/g).join('/'); // add / after 2 digits

        e.target.value = expiryDateWithDash;
    });



</script>
